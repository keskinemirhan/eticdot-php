CREATE DATABASE eticdot; 
CREATE TABLE IF NOT EXISTS account (
    id SERIAL PRIMARY KEY,
    name varchar(150) not null,
    surname varchar(150) not null,
    profileImage varchar(150),
    email varchar(150) not null,
    password varchar(150) not null,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS admin (
    name VARCHAR(150) PRIMARY KEY,
    email varchar(150) not null,
    password varchar(150) not null
)

CREATE TABLE if not exists vendor (
    name VARCHAR(200) PRIMARY KEY,
    email varchar(150) not null,
    password varchar(150) not null
);

create table if not exists category (
    name varchar(120) PRIMARY KEY,
    image varchar(120) not null
);

CREATE TABLE IF NOT EXISTS product(
    id SERIAL PRIMARY KEY,
    name varchar(120),
    price DECIMAL,
    prevPrice decimal,
    imageUrl varchar(200),
    categoryName VARCHAR(120),
    vendorName VARCHAR(200),
    FOREIGN KEY(categoryName)
        REFERENCES category(name),
    FOREIGN KEY(vendorName)
        REFERENCES vendor(name)
);


CREATE table if not exists favorite (
    id serial PRIMARY KEY,
    accountId integer not null,
    productId integer not null,
    FOREIGN KEY(accountId)
        REFERENCES account(id),
    FOREIGN KEY(productId)
        REFERENCES product(id)
);

CREATE table if not exists account_basket(
    id serial primary key,
    accountId integer not null,
    productId integer not null,
    amount int not null,
    FOREIGN KEY(accountId)
        REFERENCES account(id),
    FOREIGN KEY(productId)
        REFERENCES product(id)
);

create table if not exists purchase(
    id serial primary key,
    accountId integer not null,
    successfull boolean not null,
    total decimal not null,
    createdAt timestamp DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY(accountId)
        REFERENCES account(id)
); 

create table if not exists purchase_item(
    id serial primary key,
    productId integer not null,
    priceSnapshot decimal not null,
    amount int not null,
    purchaseId integer,
    FOREIGN KEY (purchaseId)
        REFERENCES purchase(id)
);


create table if not exists account_session(
    token varchar(350) primary key,
    accountId integer,
    FOREIGN KEY (accountId)
        REFERENCES account(id)
);

create table if not exists vendor_session (
    token varchar(350) primary key,
    vendorId integer,
    FOREIGN KEY(vendorId)
        REFERENCES vendor(id) 
);